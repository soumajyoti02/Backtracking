class Solution{
    public:
    void getpath(vector<vector<int>> m,int n, vector<string>& ans,int i,int j,string str)
    {
        if(i>=n or j >= n or i < 0 or j < 0 or m[i][j] == 0) 
        {
            return;
        }
        
        if(i == n-1 and j == n-1)
        {
            ans.push_back(str);
            return;
        }
        m[i][j] = 0;
        
        getpath(m,n,ans,i-1,j,str+"U");
        getpath(m,n,ans,i+1,j,str+"D");
        getpath(m,n,ans,i,j-1,str+"L");
        getpath(m,n,ans,i,j+1,str+"R");
        
        
        m[i][j] = 1;
        return;
    }
    
    vector<string> findPath(vector<vector<int>> &m, int n) {
        // Your code goes here
        vector<int> ans;
        getpath(m,n,ans,0,0,"");
        return ans;
    }
};
